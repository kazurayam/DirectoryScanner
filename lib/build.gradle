plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    mavenLocal()
}

group = 'com.kazurayam'
version = '0.1.1'

ext {
    ARTIFACT_ID = 'monk-directory-scanner'
    isReleaseVersion = ! version.endsWith("SNAPSHOT")
}

dependencies {
    // Use TestNG framework, also requires calling test.useTestNG() below
    testImplementation libs.testng

    // https://mvnrepository.com/artifact/com.kazurayam/unittest-helper
    testImplementation("com.kazurayam:unittest-helper:0.5.1")

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    testImplementation("org.slf4j:slf4j-api:2.0.17")
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    testImplementation("org.slf4j:slf4j-simple:2.0.17")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

jar {
    archiveBaseName = ARTIFACT_ID
}

javadoc {
    title = ARTIFACT_ID + " " + project.version + " API"
}

tasks.register("publishJavadoc", Copy) {
    group = 'Custom'
    description = "copy the Java files into the rootProject/docs directory to make it publicly accessible"
    from 'build/docs/javadoc'
    into "${rootProject.projectDir}/docs/api"
}
javadoc.finalizedBy publishJavadoc

tasks.named('test') {
    // Use TestNG for unit tests.
    useTestNG()
}

publishing {
    publications {
        // type "gradle publishMylibPublicationToGrp
        mylib(MavenPublication) {
            groupId = project.group
            artifactId = ARTIFACT_ID
            from components.java
            pom {
                description = 'Ant DirectoryScanner simplified, made portable'
                url = 'https://kazurayam.github.io/MonkDirectoryScanner/'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org.licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'kazurayam'
                        name = 'URAYAMA,kazuaki'
                        email = 'kazuaki.urayama@gmail.com'
                    }
                }
                scm {
                    connection = "scm:git:https://github.com/kazurayam/${project.rootProject.name}.git"
                    developerConnection = "scm:git:git@github.com:kazurayam/${project.rootProject.name}.git"
                    url = "https://github.com/kazurayam/${project.rootProject.name}"
                }
            }
        }
    }
    repositories {
        maven {
            name = "gpr"
            url = uri("https://maven.pkg.github.com/kazurayam/${rootProject.name}")
            credentials {
                username = project.findProperty('gpr.user')
                password = project.findProperty('gpr.key')
            }
        }
    }
}
// type "$ gradle publishMylibPublicationToGprRepository"

signing {
    sign publishing.publications.mylib
}
// I do not want to sign the SNAPSHOT
tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}
